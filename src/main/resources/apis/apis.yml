swagger: "2.0"
info:
  title: Demo APIs
  version: "2.0"
  description: Use VSCode plugin [OpenAPI (Swagger) Editor](https://marketplace.visualstudio.com/items?itemName=42Crunch.vscode-openapi) to edit this document.
host: localhost:8618
schemes:
  - http
  - https

paths:
  /login:
    post:
      summary: 用户登录
      tags:
        - auth
      operationId: login
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: rememberMe
          in: query
          type: boolean
          required: true
          description: 记住我
          default: false
        - name: body
          in: body
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/LoginResponse"
        400:
          description: parameter error
        500:
          description: server error
  /logout:
    get:
      summary: 用户登出
      tags:
        - auth
      operationId: logout
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: success
        401:
          description: unauthorized
  /user:
    post:
      summary: 添加用户
      tags:
        - user
      description: 添加用户(仅root)
      operationId: createUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateUserRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/BaseResp"
        400:
          description: parameter error
        500:
          description: server error
    put:
      summary: 修改用户
      tags:
        - user
      description: 修改用户(仅root)
      operationId: updateUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          description: 用户id
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUserRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/BaseResp"
        400:
          description: parameter error
        500:
          description: server error
    delete:
      tags:
        - user
      summary: 删除用户
      description: 删除用户(仅root),删除用户前需要先删除用户下挂载的任务
      operationId: deleteUser
      produces:
        - "application/json"
      parameters:
        - name: id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/BaseResp"
        400:
          description: parameter error
        500:
          description: server error
  /user/list:
    get:
      tags:
        - user
      summary: 获取用户列表
      operationId: userList
      produces:
        - "application/json"
      parameters:
        - name: userName
          in: query
          type: string
        - name: currentPage
          in: query
          type: integer
          default: 1
        - name: pageSize
          in: query
          type: integer
          default: 10
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/UserListResponse"
        400:
          description: parameter error
        500:
          description: server error
  /user/password:
    put:
      summary: 修改用户密码
      tags:
        - user
      description: 修改用户
      operationId: updateUserPassword
      produces:
        - "application/json"
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          description: 用户id
        - name: newPassword
          in: query
          required: true
          type: string
          minLength: 8
          maxLength: 16
          description: 新密码
        - name: oldPassword
          in: query
          required: true
          type: string
          minLength: 8
          maxLength: 16
          description: 旧密码
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/BaseResp"
        400:
          description: parameter error
        500:
          description: server error
  /project:
    post:
      tags:
        - project
      summary: 创建项目
      description: 创建项目(仅root),name+version要唯一
      operationId: createProject
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateProjectRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/BaseResp"
        400:
          description: parameter error;
        500:
          description: server error;
    put:
      tags:
        - project
      summary: 修改项目信息
      description: 修改项目信息(仅root),name+version要唯一
      operationId: updateProject
      produces:
        - "application/json"
      parameters:
        - in: query
          name: id
          type: integer
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdateProjectRequest"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/BaseResp"
        400:
          description: parameter error;
        500:
          description: server error;
    delete:
      tags:
        - project
      summary: 删除项目
      description: 删除项目(仅root)
      operationId: deleteProject
      produces:
        - "application/json"
      parameters:
        - in: query
          name: id
          type: integer
          required: true
          description: 项目id
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/BaseResp"
        400:
          description: parameter error
        500:
          description: server error
  /project/list:
    get:
      tags:
        - project
      summary: 获取项目列表
      description: 获取项目列表
      operationId: projectList
      produces:
        - "application/json"
      parameters:
        - name: name
          in: query
          type: string
        - name: currentPage
          in: query
          type: integer
          default: 1
        - name: pageSize
          in: query
          type: integer
          default: 10
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/ProjectListResponse"
        400:
          description: parameter error
        500:
          description: server error



# common parameters
parameters:
  queryPageSize:
    name: page_size
    in: query
    type: integer
    required: false
    default: 20
    description: 每页条数
  queryCurrentPage:
    name: current_page
    in: query
    type: integer
    required: false
    default: 1
    description: 当前页

# common data structure
definitions:
  BaseResp:
    type: object
    properties:
      message:
        type: string
  OnePageData:
    type: object
    properties:
      pagination:
        type: object
        properties:
          totalSize:
            type: integer
            example: 1000
          currentPage:
            type: integer
            example: 1
          pageSize:
            type: integer
            example: 20
  LoginRequest:
    type: object
    required:
      - userName
      - password
    properties:
      userName:
        type: string
      password:
        type: string
  LoginResponse:
    type: object
    properties:
      message:
        type: string
      result:
        type: object
        $ref: "#/definitions/UserResponse"
  CreateUserRequest:
    type: object
    required:
      - userName
      - password
      - nickName
      - email
    properties:
      userName:
        type: string
        pattern: ^[a-zA-Z][_a-zA-Z0-9]+$
        minLength: 2
        maxLength: 32
      password:
        type: string
        minLength: 8
        maxLength: 16
      nickName:
        type: string
        minLength: 2
        maxLength: 32
      email:
        type: string
        minLength: 2
        maxLength: 32
        pattern: ^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
      remark:
        type: string
        maxLength: 255
  UpdateUserRequest:
    type: object
    properties:
      password:
        type: string
        minLength: 8
        maxLength: 16
      nickName:
        type: string
        minLength: 2
        maxLength: 32
      email:
        type: string
        minLength: 2
        maxLength: 32
        pattern: ^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
      remark:
        type: string
        maxLength: 255
  UserListResponse:
    allOf:
      - $ref: "#/definitions/OnePageData"
      - type: object
        properties:
          list:
            type: array
            items:
              $ref: "#/definitions/UserResponse"
  UserResponse:
    type: object
    properties:
      id:
        type: integer
      userName:
        type: string
      nickName:
        type: string
      email:
        type: string
      updateTime:
        type: string
      createTime:
        type: string
      remark:
        type: string
  CreateProjectRequest:
    type: object
    required:
      - name
      - version
      - uid
      - status
    properties:
      name:
        type: string
        minLength: 2
        maxLength: 32
        description: 项目名
      version:
        type: string
        minLength: 2
        maxLength: 8
        description: 项目版本号
      uid:
        type: integer
        minLength: 1
        maxLength: 8
        description: 用户id
      status:
        type: string
        enum:
          - "1"
          - "2"
        description: "项目状态,1:开发中;2:已完成"
      remark:
        type: string
        maxLength: 255
  UpdateProjectRequest:
    type: object
    required:
      - uid
    properties:
      version:
        type: string
        minLength: 2
        maxLength: 8
        description: 项目版本号
      uid:
        type: integer
        minLength: 1
        maxLength: 8
        description: 用户id
      status:
        type: string
        enum:
          - "1"
          - "2"
        description: "项目状态,1:开发中;2:已完成"
      remark:
        type: string
        maxLength: 255
  ProjectResponse:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      version:
        type: string
      nickName:
        type: string
        description: 项目负责人昵称
      status:
        type: string
        description: "项目状态,1:开发中;2:已完成"
      remark:
        type: string
      updateTime:
        type: string
      createTime:
        type: string
  ProjectListResponse:
    allOf:
      - $ref: "#/definitions/OnePageData"
      - type: object
        properties:
          list:
            type: array
            items:
              $ref: "#/definitions/ProjectResponse"